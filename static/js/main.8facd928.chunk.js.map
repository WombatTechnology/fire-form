{"version":3,"sources":["../../src/ContactFormDefaultConfig.tsx","../../src/ContactForm.tsx","firebaseConfig.tsx","App.tsx","index.tsx"],"names":["defaultConfig","containerStyle","padding","backgroundColor","formStyle","display","flexDirection","alignItems","width","textStyle","height","marginTop","border","borderRadius","textAreaStyle","verticalAlign","buttonStyle","background","color","fontWeight","cursor","indicatorStyle","position","left","right","marginLeft","marginRight","top","namePlaceHolder","companyNamePlaceHolder","emailPlaceHolder","contentPlaceHolder","submitButtonLabel","ContactForm","config","setting","successCallback","errorCallback","useState","name","setName","companyName","setCompanyName","email","setEmail","content","setContent","loading","setLoading","style","onSubmit","event","firebase","id","required","type","placeholder","value","onChange","disabled","size","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","alert","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8facd928.chunk.js","sourcesContent":["import { ContactFormSetting } from './ContactForm'\n\nconst defaultConfig: ContactFormSetting = {\n  containerStyle: {\n    padding: \"24px\",\n    backgroundColor: \"#F8F8F8\"\n  },\n  formStyle: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  textStyle: {\n    height: \"40px\",\n    marginTop: \"20px\",\n    width: \"100%\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    padding: \"7px 12px\"\n  },\n  textAreaStyle: {\n    marginTop: \"20px\",\n    width: \"100%\",\n    height: \"200px\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    padding: \"7px 12px\",\n    verticalAlign: \"top\"\n  },\n  buttonStyle: {\n    background: \"rgb(81 204 245)\",\n    borderRadius: \"6px\",\n    width: \"260px\",\n    height: \"40px\",\n    border: \"none\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\"\n  },\n  indicatorStyle: {\n    position: \"absolute\",\n    left: \"0\",\n    right: \"0\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    top: \"15%\",\n    height: \"40px\",\n    width: \"30px\"\n  },\n  namePlaceHolder: \"Name\",\n  companyNamePlaceHolder: \"Company Name\",\n  emailPlaceHolder: \"Email\",\n  contentPlaceHolder: \"Inquiry Detail\",\n  submitButtonLabel: \"Submit\"\n}\nexport default defaultConfig\n","import React, { useState, FormEvent } from 'react'\nimport firebase from \"firebase/app\"\nimport 'firebase/database'\nimport './reset.css'\nimport defaultConfig from './ContactFormDefaultConfig'\nimport CSS from 'csstype'\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport interface FirebaseConfig {\n  apiKey: string,\n  authDomain: string,\n  databaseURL: string,\n  projectId: string,\n  storageBucket: string,\n  messagingSenderId: string,\n  appId: string,\n  measurementId: string\n}\n\nexport interface ContactFormSetting {\n  containerStyle?: CSS.Properties,\n  formStyle?: CSS.Properties,\n  textStyle?: CSS.Properties,\n  textAreaStyle?: CSS.Properties,\n  buttonStyle?: CSS.Properties,\n  indicatorStyle?: CSS.Properties,\n  namePlaceHolder?: string,\n  companyNamePlaceHolder?: string,\n  emailPlaceHolder?: string,\n  contentPlaceHolder?: string\n  submitButtonLabel?: string\n}\n\nexport interface FireFormSuccessCallback { (): void }\nexport interface FireFormErrorCallback { (error: Error): void }\n\nexport interface Props {\n  config: FirebaseConfig,\n  setting?: ContactFormSetting,\n  successCallback: FireFormSuccessCallback,\n  errorCallback: FireFormErrorCallback\n}\n\nconst ContactForm = ({\n  config,\n  setting,\n  successCallback,\n  errorCallback\n}: Props) => {\n  const [name, setName] = useState('');\n  const [companyName, setCompanyName] = useState('');\n  const [email, setEmail] = useState('');\n  const [content, setContent] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault()\n    setLoading(true)\n    // Init firebase\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config)\n    }\n\n    const id = firebase.database().ref('contacts').push().key\n    firebase.database().ref('contacts/' + id).set({\n      name: name,\n      companyName: companyName,\n      email: email,\n      content: content\n    },\n      (error: Error | null) => {\n        setLoading(false)\n        if (error) {\n          errorCallback(error)\n        } else {\n          successCallback()\n        }\n      }\n    );\n  }\n\n  return (\n    <div style={setting?.containerStyle || defaultConfig.containerStyle}>\n      <form onSubmit={handleSubmit} style={setting?.formStyle || defaultConfig.formStyle}>\n        <input\n          required\n          style={setting?.textStyle || defaultConfig.textStyle}\n          type=\"text\"\n          placeholder={setting?.namePlaceHolder || defaultConfig.namePlaceHolder}\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <input\n          required\n          style={setting?.textStyle || defaultConfig.textStyle}\n          type=\"text\"\n          placeholder={setting?.companyNamePlaceHolder || defaultConfig.companyNamePlaceHolder}\n          value={companyName}\n          onChange={(event) => setCompanyName(event.target.value)}\n        />\n        <input\n          required\n          style={setting?.textStyle || defaultConfig.textStyle}\n          type=\"email\"\n          placeholder={setting?.emailPlaceHolder || defaultConfig.emailPlaceHolder}\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n        <textarea\n          style={setting?.textAreaStyle || defaultConfig.textAreaStyle}\n          placeholder={setting?.contentPlaceHolder || defaultConfig.contentPlaceHolder}\n          value={content}\n          onChange={(event) => setContent(event.target.value)}\n        />\n        <div style={{ position: \"relative\", height: \"40px\", marginTop: \"30px\" }}>\n          <input\n            style={setting?.buttonStyle || defaultConfig.buttonStyle}\n            type=\"submit\"\n            disabled={loading}\n            value={loading ? \"\" : (setting?.submitButtonLabel || defaultConfig.submitButtonLabel)}\n          />\n          {\n            loading &&\n            <div style={setting?.indicatorStyle || defaultConfig.indicatorStyle}>\n              <ClipLoader\n                size={30}\n                color={\"white\"}\n                loading={true}\n              />\n            </div>\n          }\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default ContactForm","// This is sample and deprecated.\n// Please replace with your Firebase Config\nexport default {\n  apiKey: \"AIzaSyD1DBLBhoaBUntOdlZenhc01_9dnDkAlgY\",\n  authDomain: \"database-test-e19c7.firebaseapp.com\",\n  databaseURL: \"https://database-test-e19c7.firebaseio.com\",\n  projectId: \"database-test-e19c7\",\n  storageBucket: \"database-test-e19c7.appspot.com\",\n  messagingSenderId: \"883298497799\",\n  appId: \"1:883298497799:web:645481b8122aa139b641a2\",\n  measurementId: \"G-FPRG5N610Z\"\n}","import React from 'react'\nimport 'fire-form'\nimport { ContactForm } from 'fire-form'\nimport 'fire-form/dist/index.css'\nimport config from './firebaseConfig'\n\nconst App = () => {\n  return <ContactForm\n    config={config}\n    successCallback={() => alert(\"success :)\")}\n    errorCallback={(error) => alert(error)}\n  />\n}\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}